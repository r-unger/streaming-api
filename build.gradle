plugins {
    id 'org.springframework.boot' version '3.1.11'
    //id 'org.springframework.boot' version '3.5.3'
    // TODO: the new Spring Boot v3.5.x version needs some test case changes
    // See also the Jupiter older versions below
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
// next line only for .war files
    id 'war'
}

group = 'com.videotools'
    // some kind of TLD is needed, or else tomcat is warning
version = 'v1'
    // this is not the source version, but the API version

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext['akkaBinary'] = '2.12'
ext['akkaVersion'] = '2.8.7'
// TODO: newer Akka versions have a different license;
// better switch to the free fork https://pekko.apache.org/

dependencies {
    // Spring Boot declarations
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    // next line only for .war files
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Project-specific
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    // https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
    //implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'
    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'
    //compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
    // TODO: didn't switch to versions 3.2/6.1 yet, because of breaking changes

    // Apache Commons
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.20.+'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-csv
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.14.+'

    // Logging: SLF4J + Logback
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.+'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.+'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.+'
    // https://mvnrepository.com/artifact/org.codehaus.janino/janino
    implementation group: 'org.codehaus.janino', name: 'janino', version: '3.1.+'
    // https://mvnrepository.com/artifact/org.codehaus.janino/commons-compiler
    implementation group: 'org.codehaus.janino', name: 'commons-compiler', version: '3.1.+'
    // (both janino libraries are required by logback's if-then-else feature)

    // Akka Actors
    // https://mvnrepository.com/search?q=com.typesafe.akka
    implementation group: 'com.typesafe.akka', name: "akka-actor_${akkaBinary}", version: "${akkaVersion}"
    testImplementation group: 'com.typesafe.akka', name: "akka-testkit_${akkaBinary}", version: "${akkaVersion}"
    // Akka Logging for SLF4J
    // https://mvnrepository.com/artifact/com.typesafe.akka/akka-slf4j
    implementation group: 'com.typesafe.akka', name: "akka-slf4j_${akkaBinary}", version: "${akkaVersion}"

    // Jupiter tests
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
    //testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.13.+'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.9.1'
    //testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.13.+'
    // TODO: need some test case changes for the new Spring Boot 3.5.x version
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-noble-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
