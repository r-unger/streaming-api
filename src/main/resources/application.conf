# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

        # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
        # to STDOUT)
        loggers = ["akka.event.slf4j.Slf4jLogger"]
        
        logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

        # Log level used by the configured loggers (see "loggers") as soon
        # as they have been started; before that, see "stdout-loglevel"
        # Options: OFF, ERROR, WARNING, INFO, DEBUG

        # Development:
        loglevel = "DEBUG"
        # Production:
        # loglevel = "WARNING"

        # Most of the time: leave loglevel to DEBUG,
        # further filtering is done in logback.xml
        # BUT: in production this should be set to WARNING so that
        # the debug/info logs get filtered out as soon as possible

        # Log level for the very basic logger activated during ActorSystem startup.
        # This logger prints the log messages to stdout (System.out).
        # Options: OFF, ERROR, WARNING, INFO, DEBUG (Default: WARNING)

        # Development:
        stdout-loglevel = "DEBUG"
        # Production:
        # stdout-loglevel = "OFF"

        # Tip: Set stdout-loglevel to "OFF" for production because ActorSystem
        # startup messages will not be redirected to the above specified logger.
        # They will always go to stdout.

        actor {

            log-dead-letters-during-shutdown = on #off
            # not needed, since the system does only get terminated after
            # all actors are stopped

            debug {

                # enable DEBUG logging of actor lifecycle changes
                lifecycle = on

                # enable DEBUG logging of unhandled messages
                unhandled = on

            }

            # ATT: Temp use only to test, if serialization is implemented
            #serialize-messages = on
            #serialize-creators = on

            #default-dispatcher {
            #    # Throughput for default Dispatcher, set to 1 for as fair as possible
            #    throughput = 10
            #}

        }
}
